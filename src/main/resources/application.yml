server:
  port: ${MOVIE_MATE_USER_SERVICE_PORT:8080}
  servlet:
    context-path: ${MOVIE_MATE_USER_SERVICE_CONTEXT_PATH:/api/v1}

spring:
  datasource:
    url: ${MOVIE_MATE_POSTGRE_URL}
    username: ${MOVIE_MATE_POSTGRE_USERNAME}
    password: ${MOVIE_MATE_POSTGRE_PASSWORD}
  jpa:
    properties:
      hibernate:
        hbm2ddl:
          auto: update
      #        show_sql: true
    database: postgresql
    database-platform: org.hibernate.dialect.PostgreSQLDialect
  cloud:
    consul:
      host: ${MOVIE_MATE_DISCOVERY_SERVER_HOST}
      port: ${MOVIE_MATE_DISCOVERY_SERVER_PORT}
      discovery:
        register: true
        enabled: true
        instance-id: mm-${spring.application.name}-${random.value}
        health-check-path: ${server.servlet.context-path}/actuator/health
        health-check-interval: 10s
        prefer-ip-address: true
        scheme: http
        tags:
          # === PUBLIC (NO AUTH) ===
          - "traefik.enable=true"
          - "traefik.http.routers.${spring.application.name}-public.rule=PathPrefix(`/auth`) || PathPrefix(`/docs`)"
          - "traefik.http.routers.${spring.application.name}-public.middlewares=dapr-rewrite@file"
          - "traefik.http.routers.${spring.application.name}-public.priority=100"
          # === SECURE (FORWARD AUTH) ===
          - "traefik.http.routers.${spring.application.name}.rule=PathPrefix(`/${spring.application.name}`)"
          - "traefik.http.routers.${spring.application.name}.middlewares=dapr-rewrite@file,jwt-forwardauth@file"
          - "traefik.http.routers.${spring.application.name}.priority=10"
          - "traefik.http.services.${spring.application.name}.loadbalancer.server.port=3500" # standard Dapr port
  cache:
    type: redis
    host: ${MOVIE_MATE_REDIS_HOST}
    port: ${MOVIE_MATE_REDIS_PORT:6379}
    database-idx: ${MOVIE_MATE_USER_SERVICE_DATABASE_INDEX:0}
    password: ${MOVIE_MATE_REDIS_PASSWORD}
    ttl: ${MOVIE_MATE_USER_SERVICE_REDIS_TTL:-1}
  application:
    name: mm-user-service

dapr:
  http:
    port: ${MOVIE_MATE_USER_SERVICE_DAPR_PORT:3500}
  pubsub:
    component: ${MOVIE_MATE_DAPR_PUBSUB_COMPONENT}
    topic:
      login: ${MOVIE_MATE_KAFKA_LOGIN_TOPIC}
      register: ${MOVIE_MATE_KAFKA_REGISTER_TOPIC}


security:
  jwt:
    secret-key: ${MOVIE_MATE_JWT_SECRET_KEY}
    access-expiration: ${MOVIE_MATE_JWT_ACCESS_EXPIRATION_TIME}
    refresh-expiration: ${MOVIE_MATE_JWT_REFRESH_EXPIRATION_TIME}
  root-user:
    username: ${MOVIE_MATE_USER_SERVICE_ROOT_USERNAME}
    email: ${MOVIE_MATE_USER_SERVICE_ROOT_EMAIL}
    password: ${MOVIE_MATE_USER_SERVICE_ROOT_PASSWORD}

management:
  otlp:
    metrics:
      export:
        url: ${MOVIE_MATE_OTEL_COLLECTOR_METRICS_URL}
    tracing:
      endpoint: ${MOVIE_MATE_OTEL_COLLECTOR_TRACING_URL}
  endpoints:
    web:
      exposure:
        include: health, info, prometheus
  endpoint:
    health:
      show-details: when_authorized
  security:
    enabled: true

logging:
  pattern:
    level: "%5p [traceId=%X{traceId:-},spanId=%X{spanId:-}]"
  level:
    org:
      springframework: DEBUG

app:
  cors:
    allowed-origins: ${MOVIE_MATE_USER_SERVICE_ALLOWED_ORIGINS:https://themanki.net,http://localhost:3000}

springdoc:
  api-docs:
    path: /docs
  swagger-ui:
    path: /docs/swagger-ui.html
  server:
    url: ${MOVIE_MATE_USER_SERVICE_OPENAPI_SERVER_URL}
